<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="147413" started-at="2020-10-08T12:43:32Z" finished-at="2020-10-08T12:45:59Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="147413" started-at="2020-10-08T12:43:32Z" finished-at="2020-10-08T12:45:59Z">
      <class name="testScripts.NewLL">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="beforesuite" is-config="true" duration-ms="176" started-at="2020-10-08T12:43:31Z" finished-at="2020-10-08T12:43:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="Start()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="Start" is-config="true" duration-ms="0" started-at="2020-10-08T12:43:32Z" depends-on-methods="frameworkLibrary.BaseClass.beforesuite" finished-at="2020-10-08T12:43:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Start -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="beforemethod" is-config="true" duration-ms="1071" started-at="2020-10-08T12:43:32Z" finished-at="2020-10-08T12:43:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@9eaaecf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Predatacheck()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="Predatacheck" is-config="true" duration-ms="391" started-at="2020-10-08T12:43:33Z" finished-at="2020-10-08T12:43:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Predatacheck -->
        <test-method status="FAIL" signature="NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="NewLL_Public" duration-ms="129296" started-at="2020-10-08T12:43:33Z" finished-at="2020-10-08T12:45:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at frameworkLibrary.ReportLibrary.reportEvent(ReportLibrary.java:38)
at applicationPages.UploadPhoto_SignaturePage.Clickon_SavephotoandSignature(UploadPhoto_SignaturePage.java:134)
at applicationPages.Flows.VerifyFlows(Flows.java:61)
at applicationPages.UniversalState.PerformJob(UniversalState.java:203)
at testScripts.NewLL.NewLL_Public(NewLL.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewLL_Public -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="aftermethod" is-config="true" duration-ms="433" started-at="2020-10-08T12:45:42Z" finished-at="2020-10-08T12:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewLL_Public status=FAILURE method=NewLL.NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@9eaaecf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="CloseBrowsers()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="CloseBrowsers" is-config="true" duration-ms="0" started-at="2020-10-08T12:45:42Z" finished-at="2020-10-08T12:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowsers -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="beforemethod" is-config="true" duration-ms="116" started-at="2020-10-08T12:45:43Z" finished-at="2020-10-08T12:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@9eaaecf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Predatacheck()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="Predatacheck" is-config="true" duration-ms="176" started-at="2020-10-08T12:45:43Z" finished-at="2020-10-08T12:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Predatacheck -->
        <test-method status="FAIL" signature="NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="NewLL_Public" duration-ms="15587" started-at="2020-10-08T12:45:43Z" finished-at="2020-10-08T12:45:59Z">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[session not created
from chrome not reachable
  (Session info: chrome=85.0.4183.121)
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'DESKTOP-FEL46G5', ip: '192.168.29.33', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x006AD383+3134339]
Ordinal0 [0x0059A171+2007409]
Ordinal0 [0x0043AD90+568720]
Ordinal0 [0x00431364+529252]
Ordinal0 [0x004319FC+530940]
Ordinal0 [0x00432C15+535573]
Ordinal0 [0x0042DFC5+516037]
Ordinal0 [0x0043BF70+573296]
Ordinal0 [0x003E1916+203030]
Ordinal0 [0x003E0C1D+199709]
Ordinal0 [0x003DEB0B+191243]
Ordinal0 [0x003C2E77+77431]
Ordinal0 [0x003C3E3E+81470]
Ordinal0 [0x003C3DC9+81353]
Ordinal0 [0x005B0CD9+2100441]
GetHandleVerifier [0x0081B75A+1396954]
GetHandleVerifier [0x0081B3D9+1396057]
GetHandleVerifier [0x00827126+1444518]
GetHandleVerifier [0x0081BCE8+1398376]
Ordinal0 [0x005A7F51+2064209]
Ordinal0 [0x005B22EB+2106091]
Ordinal0 [0x005B2411+2106385]
Ordinal0 [0x005C49C4+2181572]
BaseThreadInitThunk [0x76616359+25]
RtlGetAppContainerNamedObjectPath [0x775D7C24+228]
RtlGetAppContainerNamedObjectPath [0x775D7BF4+180]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created
from chrome not reachable
  (Session info: chrome=85.0.4183.121)
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'DESKTOP-FEL46G5', ip: '192.168.29.33', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x006AD383+3134339]
Ordinal0 [0x0059A171+2007409]
Ordinal0 [0x0043AD90+568720]
Ordinal0 [0x00431364+529252]
Ordinal0 [0x004319FC+530940]
Ordinal0 [0x00432C15+535573]
Ordinal0 [0x0042DFC5+516037]
Ordinal0 [0x0043BF70+573296]
Ordinal0 [0x003E1916+203030]
Ordinal0 [0x003E0C1D+199709]
Ordinal0 [0x003DEB0B+191243]
Ordinal0 [0x003C2E77+77431]
Ordinal0 [0x003C3E3E+81470]
Ordinal0 [0x003C3DC9+81353]
Ordinal0 [0x005B0CD9+2100441]
GetHandleVerifier [0x0081B75A+1396954]
GetHandleVerifier [0x0081B3D9+1396057]
GetHandleVerifier [0x00827126+1444518]
GetHandleVerifier [0x0081BCE8+1398376]
Ordinal0 [0x005A7F51+2064209]
Ordinal0 [0x005B22EB+2106091]
Ordinal0 [0x005B2411+2106385]
Ordinal0 [0x005C49C4+2181572]
BaseThreadInitThunk [0x76616359+25]
RtlGetAppContainerNamedObjectPath [0x775D7C24+228]
RtlGetAppContainerNamedObjectPath [0x775D7BF4+180]

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:122)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:125)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:130)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
at applicationPages.UniversalState.StartAPP(UniversalState.java:70)
at testScripts.NewLL.NewLL_Public(NewLL.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewLL_Public -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="aftermethod" is-config="true" duration-ms="269" started-at="2020-10-08T12:45:59Z" finished-at="2020-10-08T12:45:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewLL_Public status=FAILURE method=NewLL.NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@9eaaecf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="CloseBrowsers()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="CloseBrowsers" is-config="true" duration-ms="0" started-at="2020-10-08T12:45:59Z" finished-at="2020-10-08T12:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowsers -->
        <test-method status="PASS" signature="End()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="End" is-config="true" duration-ms="40" started-at="2020-10-08T12:45:59Z" finished-at="2020-10-08T12:45:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="aftersuite" is-config="true" duration-ms="4555" started-at="2020-10-08T12:45:59Z" depends-on-methods="testScripts.NewLL.End" finished-at="2020-10-08T12:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testScripts.NewLL -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
